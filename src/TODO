-Poner cada estructura en su .hpp correspondiente (ie. cublas_spiking_vector en cublas static.hpp)
-Vectores auxiliares se deben llamar de misma manera. Poner en .hpp de cublas en float y en cusparse en int.
-Existe una funcion para crear los vectores auxiliares para la compressed matrix (q calcula el nnz)

-Releer el curso del dli.





SNP_static:

SNP_static_ell:


SNP_static_optimized:




##############################
Herramientas utiles:
-N-sight (profiling): https://developer.nvidia.com/nsight-compute
-Medir tiempo ejecucion
    -nvprof
    -counters.timer (en c√≥digo) 

################################
Prueba ordenacion:
SPARSE:
    100 numeros FAIL(860m) OK(2080)
ELL:
    100 numeros OK

OPTIMIzed:
    100 numeros OK


